{"version":3,"sources":["store/types.ts","api/index.ts","store/actions/actionApp.ts","store/actions/actionRoverPhotos.ts","components/Header/index.tsx","components/CustomAlert/index.tsx","components/SearchSelect/index.tsx","components/ListPhoto/ListPhoto.tsx","App.tsx","reportWebVitals.ts","store/reducers/appReducer.ts","store/reducers/roversPhotos.ts","store/rootReducer.ts","store/index.ts","index.tsx"],"names":["LoadingState","EnumActionType","EnumRovers","EnumCameraRover","API_KEY","instance","axios","create","baseURL","roverAPI","rover","sol","camera","page","get","then","res","data","actionApp","payload","type","SET_ALERT","SET_CLOSE_ALERT","SET_LOADING","actionsRoverPhotos","SET_ROVER_PHOTOS","SET_SEARCH_PHOTOS","SET_QUERYING_SEARCH_PHOTOS","SET_PAGE_PHOTOS","useStyles","makeStyles","theme","root","marginBottom","spacing","title","backgroundColor","TEAL","minHeight","display","alignItems","justifyContent","margin","marginRight","text","breakpoints","down","fontSize","rootProgress","marginTop","Header","React","memo","loading","classes","className","Typography","variant","LinearProgress","CustomAlert","onCloseAlert","typeAlert","isOpenAlert","children","Snackbar","open","onClose","anchorOrigin","vertical","horizontal","Alert","severity","SearchSelect","dispatch","useDispatch","useForm","control","handleSubmit","Grid","container","justify","onSubmit","rovers","getState","a","LOADING","queryData","roversPhotos","queryingBySol","photos","length","LOADED","message","console","log","searchRoversPhotos","toLowerCase","item","xs","md","id","name","label","Object","keys","map","key","i","MenuItem","value","as","TextField","defaultValue","required","Button","color","HookFormSelect","props","labelId","FormControl","style","minWidth","InputLabel","Select","maxWidth","wrapper","media","height","ListPhoto","useSelector","state","sm","Card","CardActionArea","CardMedia","image","img_src","CardContent","component","Divider","full_name","CardActions","size","href","target","onClick","App","appReducer","alert","useEffect","ERROR","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialExpenseState","undefined","produce","draft","action","roversPhotosReducer","push","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c0df807.chunk.js","sourcesContent":["import { Action } from 'redux'\r\n\r\nexport enum LoadingState {\r\n  LOADING = 'LOADING',\r\n  LOADED = 'LOADED',\r\n  ERROR = 'ERROR',\r\n}\r\n\r\nexport enum EnumActionType {\r\n  SET_LOADING = 'app/SET_LOADING',\r\n  SET_ALERT = 'app/SET_ALERT',\r\n  SET_CLOSE_ALERT = 'app/SET_CLOSE_ALERT',\r\n\r\n  SET_ROVER_PHOTOS = 'rovers/SET_ROVER_PHOTOS',\r\n  SET_PAGE_PHOTOS = 'rovers/SET_PAGE_PHOTOS',\r\n  SET_SEARCH_PHOTOS = 'rovers/SET_SEARCH_PHOTOS',\r\n  SET_QUERYING_SEARCH_PHOTOS = 'rovers/SET_QUERYING_SEARCH_PHOTOS',\r\n}\r\nexport interface IDataRoverPhotos {\r\n  id: number\r\n  sol: number\r\n  camera: {\r\n    id: number\r\n    name: string\r\n    rover_id: number\r\n    full_name: string\r\n  }\r\n  img_src: string\r\n  earth_date: string\r\n  rover: {\r\n    id: number\r\n    name: string\r\n    landing_date: string\r\n    launch_date: string\r\n    status: string\r\n  }\r\n}\r\n\r\nexport enum EnumRovers {\r\n  Curiosity = 'curiosity',\r\n  Spirit = 'spirit',\r\n  Opportunity = 'opportunity',\r\n}\r\n\r\nexport enum EnumCameraRover {\r\n  FHAZ = 'fhaz',\r\n  RHAZ = 'rhaz',\r\n  MAST = 'mast',\r\n  CHERCAM = 'chercam',\r\n  MAHLI = 'mahli',\r\n  MARDI = 'mardi',\r\n  NAVCAM = 'navcam',\r\n  PANCAM = 'pancam',\r\n  MINITES = 'minites',\r\n}\r\n\r\nexport interface IQueryingBySol {\r\n  sol: number\r\n  camera: string\r\n  page: number\r\n  rovers: string\r\n}\r\nexport interface IRoversState {\r\n  photos: IDataRoverPhotos[]\r\n  queryingBySol: IQueryingBySol\r\n}\r\n\r\n// App state type\r\nexport type AlertTypeMessageT = 'success' | 'info' | 'warning' | 'error' | undefined\r\nexport interface IAlertData {\r\n  open: boolean\r\n  message: string\r\n  type: AlertTypeMessageT\r\n}\r\n\r\nexport interface IAppState {\r\n  loading: LoadingState\r\n  alert: IAlertData\r\n}\r\n\r\n// interfaces to App actions\r\nexport interface ISetAlertAction extends Action<EnumActionType> {\r\n  type: EnumActionType.SET_ALERT\r\n  payload: Omit<IAlertData, 'open'>\r\n}\r\nexport interface ISetCloseAlertAction extends Action<EnumActionType> {\r\n  type: EnumActionType.SET_CLOSE_ALERT\r\n}\r\n\r\nexport interface ISetLoadingAction extends Action<EnumActionType> {\r\n  type: EnumActionType.SET_LOADING\r\n  payload: LoadingState\r\n}\r\n\r\n// interfaces to Rovers photo actions\r\nexport interface ISetRoversPhotosAction extends Action<EnumActionType> {\r\n  type: EnumActionType.SET_ROVER_PHOTOS\r\n  payload: IDataRoverPhotos[]\r\n}\r\n\r\nexport interface ISetPagePhotosAction extends Action<EnumActionType> {\r\n  type: EnumActionType.SET_PAGE_PHOTOS\r\n}\r\nexport interface ISetQueryingSearchPhotosAction extends Action<EnumActionType> {\r\n  type: EnumActionType.SET_QUERYING_SEARCH_PHOTOS\r\n  payload: IQueryingBySol\r\n}\r\nexport interface ISetSearchPhotosAction extends Action<EnumActionType> {\r\n  type: EnumActionType.SET_SEARCH_PHOTOS\r\n  payload: IDataRoverPhotos[]\r\n}\r\n\r\nexport type RoversActionT =\r\n  | ISetRoversPhotosAction\r\n  | ISetQueryingSearchPhotosAction\r\n  | ISetPagePhotosAction\r\n  | ISetSearchPhotosAction\r\n\r\nexport type AppActionT = ISetAlertAction | ISetCloseAlertAction | ISetLoadingAction\r\n","import axios from 'axios'\r\nimport { IDataRoverPhotos } from '../store/types'\r\nconst API_KEY = 'Zd94Z85x0leoVo5TRLGzd4EaDF8NRNhVtmZL4YPC'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.nasa.gov/mars-photos/api/v1/rovers/',\r\n})\r\n\r\ninterface IGetResult {\r\n  photos: IDataRoverPhotos[]\r\n}\r\n\r\nexport const roverAPI = {\r\n  get(\r\n    rover: string = 'curiosity',\r\n    sol: number = 100,\r\n    camera: string = 'fhaz',\r\n    page: number = 1\r\n  ): Promise<IGetResult> {\r\n    return instance\r\n      .get<IGetResult>(\r\n        `${rover}/photos?sol=${sol}&page=${page}&camera=${camera}&API_KEY=${API_KEY}`\r\n      )\r\n      .then((res) => res.data)\r\n  },\r\n}\r\n","import {\r\n  EnumActionType,\r\n  IAlertData,\r\n  ISetAlertAction,\r\n  ISetCloseAlertAction,\r\n  LoadingState,\r\n  ISetLoadingAction,\r\n} from '../types'\r\n\r\nexport const actionApp = {\r\n  setAlert: (payload: Omit<IAlertData, 'open'>): ISetAlertAction => ({\r\n    type: EnumActionType.SET_ALERT,\r\n    payload,\r\n  }),\r\n  closeAlert: (): ISetCloseAlertAction => ({\r\n    type: EnumActionType.SET_CLOSE_ALERT,\r\n  }),\r\n  setLoading: (payload: LoadingState): ISetLoadingAction => ({\r\n    type: EnumActionType.SET_LOADING,\r\n    payload,\r\n  }),\r\n}\r\n","import { AppDispatch, AppThunk } from '..'\r\nimport {\r\n  EnumActionType,\r\n  IDataRoverPhotos,\r\n  IQueryingBySol,\r\n  ISetPagePhotosAction,\r\n  ISetQueryingSearchPhotosAction,\r\n  ISetRoversPhotosAction,\r\n  LoadingState,\r\n  ISetSearchPhotosAction,\r\n} from '../types'\r\nimport { roverAPI } from '../../api'\r\nimport { actionApp } from './actionApp'\r\n\r\nexport const actionsRoverPhotos = {\r\n  set: (payload: IDataRoverPhotos[]): ISetRoversPhotosAction => ({\r\n    type: EnumActionType.SET_ROVER_PHOTOS,\r\n    payload,\r\n  }),\r\n  setSearchPhotos: (payload: IDataRoverPhotos[]): ISetSearchPhotosAction => ({\r\n    type: EnumActionType.SET_SEARCH_PHOTOS,\r\n    payload,\r\n  }),\r\n  setQuerying: (payload: IQueryingBySol): ISetQueryingSearchPhotosAction => ({\r\n    type: EnumActionType.SET_QUERYING_SEARCH_PHOTOS,\r\n    payload,\r\n  }),\r\n  setPage: (): ISetPagePhotosAction => ({\r\n    type: EnumActionType.SET_PAGE_PHOTOS,\r\n  }),\r\n}\r\n\r\n//thunk\r\n\r\nexport const getRoversPhotos = (): AppThunk => async (\r\n  dispatch: AppDispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(actionApp.setLoading(LoadingState.LOADING))\r\n    let { camera, sol, page, rovers } = getState().roversPhotos.queryingBySol\r\n\r\n    const data = await roverAPI.get(rovers, sol, camera, page)\r\n    dispatch(actionsRoverPhotos.set(data.photos))\r\n    dispatch(actionApp.setLoading(LoadingState.LOADED))\r\n  } catch (e) {\r\n    console.log(e)\r\n    dispatch(actionApp.setLoading(LoadingState.ERROR))\r\n    dispatch(actionApp.setAlert({ message: 'Error on server', type: 'error' }))\r\n  }\r\n}\r\n\r\nexport const searchRoversPhotos = (\r\n  rovers: string,\r\n  sol: number,\r\n  camera: string\r\n): AppThunk => async (dispatch: AppDispatch, getState) => {\r\n  try {\r\n    dispatch(actionApp.setLoading(LoadingState.LOADING))\r\n    const queryData = getState().roversPhotos.queryingBySol\r\n\r\n    if (\r\n      camera !== queryData.camera ||\r\n      rovers !== queryData.rovers ||\r\n      sol !== queryData.sol\r\n    ) {\r\n      const data = await roverAPI.get(rovers, sol, camera, 1)\r\n      dispatch(actionsRoverPhotos.setQuerying({ rovers, sol, camera, page: 1 }))\r\n\r\n      if (data.photos.length !== 0) {\r\n        dispatch(actionsRoverPhotos.setSearchPhotos(data.photos))\r\n        dispatch(actionApp.setLoading(LoadingState.LOADED))\r\n        dispatch(actionApp.setAlert({ message: 'Ok, photos on page', type: 'success' }))\r\n      } else {\r\n        dispatch(actionApp.setLoading(LoadingState.LOADED))\r\n        dispatch(\r\n          actionApp.setAlert({\r\n            message: 'Not found photo. Enter another values',\r\n            type: 'error',\r\n          })\r\n        )\r\n      }\r\n    } else {\r\n      dispatch(actionApp.setLoading(LoadingState.LOADED))\r\n      dispatch(\r\n        actionApp.setAlert({\r\n          message: 'You find this. Enter other values',\r\n          type: 'warning',\r\n        })\r\n      )\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n    dispatch(actionApp.setLoading(LoadingState.LOADED))\r\n    dispatch(actionApp.setAlert({ message: 'Error on server', type: 'error' }))\r\n  }\r\n}\r\nexport const loadMoreRoversPhotos = (): AppThunk => async (\r\n  dispatch: AppDispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch(actionApp.setLoading(LoadingState.LOADING))\r\n    dispatch(actionsRoverPhotos.setPage())\r\n\r\n    let { camera, sol, page, rovers } = getState().roversPhotos.queryingBySol\r\n    const data = await roverAPI.get(rovers, sol, camera, page)\r\n    if (data.photos.length !== 0) {\r\n      dispatch(actionsRoverPhotos.set(data.photos))\r\n      dispatch(actionApp.setLoading(LoadingState.LOADED))\r\n      dispatch(actionApp.setAlert({ message: 'Ok photo on page', type: 'info' }))\r\n    } else {\r\n      dispatch(actionApp.setLoading(LoadingState.LOADED))\r\n      dispatch(actionApp.setAlert({ message: 'Not found photo', type: 'error' }))\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n    dispatch(actionApp.setLoading(LoadingState.LOADED))\r\n    dispatch(actionApp.setAlert({ message: 'Error on server', type: 'error' }))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport TEAL from '@material-ui/core/colors/teal'\r\nimport { makeStyles, Theme, Typography } from '@material-ui/core'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  title: {\r\n    backgroundColor: TEAL[300],\r\n    minHeight: '100px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    marginRight: 40,\r\n  },\r\n  text: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: 40,\r\n    },\r\n  },\r\n  rootProgress: {\r\n    'width': '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}))\r\nexport const Header: React.FC<{ loading: boolean }> = React.memo(({ loading }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title}>\r\n        <Typography variant='h2' className={classes.text}>\r\n          Mars Rover Photos\r\n        </Typography>\r\n      </div>\r\n      {loading && (\r\n        <div className={classes.rootProgress}>\r\n          <LinearProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n})\r\n","import React from 'react'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport { AlertTypeMessageT } from '../../store/types'\r\n\r\ntype AlertProps = {\r\n  typeAlert: AlertTypeMessageT\r\n  isOpenAlert: boolean\r\n  onCloseAlert: () => void\r\n}\r\n\r\nexport const CustomAlert: React.FC<AlertProps> = ({\r\n  onCloseAlert,\r\n  typeAlert,\r\n  isOpenAlert,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        open={isOpenAlert}\r\n        onClose={onCloseAlert}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}>\r\n        <Alert variant='filled' severity={typeAlert} onClose={onCloseAlert}>\r\n          {children}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Control, Controller, useForm } from 'react-hook-form'\r\n\r\nimport { EnumRovers, EnumCameraRover } from '../../store/types'\r\nimport { searchRoversPhotos } from '../../store/actions/actionRoverPhotos'\r\n\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Select from '@material-ui/core/Select'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\ntype IFormDate = {\r\n  sol: number\r\n  rovers: string\r\n  camera: string\r\n}\r\n\r\nexport const SearchSelect = () => {\r\n  const dispatch = useDispatch()\r\n  const { control, handleSubmit } = useForm()\r\n\r\n  const onSubmitForm = ({ camera, rovers, sol }: IFormDate) => {\r\n    dispatch(searchRoversPhotos(rovers.toLowerCase(), sol, camera.toLowerCase()))\r\n  }\r\n  return (\r\n    <Grid container justify='center'>\r\n      <form onSubmit={handleSubmit(onSubmitForm)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <HookFormSelect\r\n              id='rovers-select'\r\n              name='rovers'\r\n              label='Choose rovers'\r\n              control={control}>\r\n              {Object.keys(EnumRovers).map((key, i) => (\r\n                <MenuItem key={i} value={key}>\r\n                  {key}\r\n                </MenuItem>\r\n              ))}\r\n            </HookFormSelect>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <HookFormSelect\r\n              id='camera-select'\r\n              name='camera'\r\n              label='Choose camera'\r\n              control={control}>\r\n              {Object.keys(EnumCameraRover).map((key, i) => (\r\n                <MenuItem key={i} value={key}>\r\n                  {key}\r\n                </MenuItem>\r\n              ))}\r\n            </HookFormSelect>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Controller\r\n              as={TextField}\r\n              name='sol'\r\n              control={control}\r\n              defaultValue=''\r\n              label='Sol'\r\n              required={true}\r\n              type='number'\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Button type='submit' variant='contained' color='primary'>\r\n              Send\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport interface IHookSelectProps {\r\n  id: string\r\n  name: string\r\n  label: string\r\n  control: Control\r\n  defaultValue?: string\r\n}\r\n\r\nconst HookFormSelect: React.FC<IHookSelectProps> = ({\r\n  name,\r\n  label,\r\n  control,\r\n  defaultValue = '',\r\n  children,\r\n\r\n  ...props\r\n}) => {\r\n  const labelId = `${name}-label`\r\n  return (\r\n    <FormControl style={{ minWidth: 170 }} {...props}>\r\n      <InputLabel id={labelId}>{label}</InputLabel>\r\n      <Controller\r\n        as={\r\n          <Select labelId={labelId} label={label}>\r\n            {children}\r\n          </Select>\r\n        }\r\n        name={name}\r\n        control={control}\r\n        defaultValue={defaultValue}\r\n        variant='outlined'\r\n        required={true}\r\n      />\r\n    </FormControl>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../store/rootReducer'\r\n\r\nimport { loadMoreRoversPhotos } from '../../store/actions/actionRoverPhotos'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 460,\r\n  },\r\n  wrapper: {\r\n    marginTop: 20,\r\n  },\r\n  media: {\r\n    height: 180,\r\n  },\r\n})\r\n\r\nexport const ListPhoto = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const photos = useSelector((state: RootState) => state.roversPhotos.photos)\r\n\r\n  const loadMoreClick = () => {\r\n    dispatch(loadMoreRoversPhotos())\r\n  }\r\n\r\n  return (\r\n    <Grid container justify='center' spacing={3} className={classes.wrapper}>\r\n      {photos.map((item, i) => (\r\n        <Grid key={i} item xs={12} md={4} sm={6} className={classes.root}>\r\n          <Card>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={item.img_src}\r\n                title='Image Mars'\r\n              />\r\n              <CardContent>\r\n                <Typography variant='h5' color='textPrimary'>\r\n                  Rover name:\r\n                </Typography>\r\n                <Typography variant='h6' component='h2' color='textSecondary'>\r\n                  {item.rover.name}\r\n                </Typography>\r\n                <Divider />\r\n                <Typography variant='body1' color='textPrimary'>\r\n                  Camera name:\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                  {item.camera.full_name}\r\n                </Typography>\r\n                <Typography variant='body1' color='textPrimary'>\r\n                  Sol:{' '}\r\n                  <Typography variant='body2' color='textSecondary' component='span'>\r\n                    {item.sol}\r\n                  </Typography>\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size='small' color='primary' href={item.img_src} target='_blank'>\r\n                open photo\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n      {photos.length > 0 && (\r\n        <Grid item xs={12}>\r\n          <Button onClick={loadMoreClick} variant='contained' color='primary'>\r\n            Load more...\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\nimport './App.css'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { RootState } from './store/rootReducer'\nimport { getRoversPhotos } from './store/actions/actionRoverPhotos'\nimport { actionApp } from './store/actions/actionApp'\n\nimport Container from '@material-ui/core/Container'\n\nimport { Header } from './components/Header'\nimport { CustomAlert } from './components/CustomAlert'\nimport { SearchSelect } from './components/SearchSelect'\nimport { ListPhoto } from './components/ListPhoto/ListPhoto'\nimport { LoadingState } from './store/types'\n\nfunction App() {\n  const dispatch = useDispatch()\n  const { open, message, type } = useSelector(\n    (state: RootState) => state.appReducer.alert\n  )\n  const loading = useSelector(\n    (state: RootState) => state.appReducer.loading === LoadingState.LOADING\n  )\n\n  useEffect(() => {\n    dispatch(getRoversPhotos())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className='App'>\n      <Header loading={loading} />\n      {open ? (\n        <CustomAlert\n          isOpenAlert={open}\n          typeAlert={type}\n          onCloseAlert={() => {\n            dispatch(actionApp.closeAlert())\n          }}>\n          {message}\n        </CustomAlert>\n      ) : null}\n      <Container maxWidth='md'>\n        <SearchSelect />\n        <ListPhoto />\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import produce, { Draft } from 'immer'\r\nimport { IAppState, LoadingState, EnumActionType, AppActionT } from '../types'\r\n\r\nconst initialExpenseState: IAppState = {\r\n  alert: {\r\n    open: false,\r\n    type: undefined,\r\n    message: '',\r\n  },\r\n  loading: LoadingState.LOADED,\r\n}\r\n\r\nexport const appReducer = produce((draft: Draft<IAppState>, action: AppActionT) => {\r\n  switch (action.type) {\r\n    case EnumActionType.SET_ALERT:\r\n      draft.alert.open = true\r\n      draft.alert.message = action.payload.message\r\n      draft.alert.type = action.payload.type\r\n      break\r\n\r\n    case EnumActionType.SET_CLOSE_ALERT:\r\n      draft.alert.open = false\r\n      draft.alert.message = ''\r\n      break\r\n    case EnumActionType.SET_LOADING:\r\n      draft.loading = action.payload\r\n      break\r\n    default:\r\n      break\r\n  }\r\n}, initialExpenseState)\r\n","import produce, { Draft } from 'immer'\r\nimport { IRoversState, EnumActionType, RoversActionT } from '../types'\r\n\r\nconst initialRoverPhotoState: IRoversState = {\r\n  photos: [],\r\n  queryingBySol: {\r\n    camera: 'fhaz',\r\n    sol: 100,\r\n    rovers: 'curiosity',\r\n    page: 1,\r\n  },\r\n}\r\n\r\nexport const roversPhotosReducer = produce(\r\n  (draft: Draft<IRoversState>, action: RoversActionT) => {\r\n    switch (action.type) {\r\n      case EnumActionType.SET_ROVER_PHOTOS:\r\n        draft.photos.push(...action.payload)\r\n        break\r\n      case EnumActionType.SET_SEARCH_PHOTOS:\r\n        draft.photos = action.payload\r\n        break\r\n      case EnumActionType.SET_QUERYING_SEARCH_PHOTOS:\r\n        draft.queryingBySol = action.payload\r\n        break\r\n      case EnumActionType.SET_PAGE_PHOTOS:\r\n        draft.queryingBySol.page++\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  },\r\n  initialRoverPhotoState\r\n)\r\n","import { combineReducers } from 'redux'\r\nimport { appReducer } from './reducers/appReducer'\r\nimport { roversPhotosReducer } from './reducers/roversPhotos'\r\nimport { IAppState, IRoversState } from './types'\r\n\r\nexport const rootReducer = combineReducers({\r\n  roversPhotos: roversPhotosReducer,\r\n  appReducer: appReducer,\r\n})\r\n\r\nexport type RootState = {\r\n  roversPhotos: IRoversState\r\n  appReducer: IAppState\r\n}\r\n","import { Action, applyMiddleware, compose, createStore } from 'redux'\r\nimport thunk, { ThunkAction } from 'redux-thunk'\r\n\r\nimport { rootReducer, RootState } from './rootReducer'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}